name: Unit and Functional Tests

env:
  REGION: eu-west-2
  APPLICATION_SECRET_ID: pt_id
  TESTING_APPLICATION_SECRET_ID: pt_env_testing
  AWS_ACCESS_KEY_ID: ${{ secrets.PT_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.PT_SECRET_ID }}
  AWS_DEFAULT_REGION: eu-west-2

on:
  push

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      # 1) Setup DBs for actions
      - name: Start MySQL
        run: sudo service mysql start
      - name: Confirm MySQL Started
        run: |
          while ! mysqladmin ping -h 127.0.0.1 --silent; do
            sleep 1
          done
      - name: Confirm MySQL works
        run: |
          mysql -u root -proot -e "show databases"
      - name: Create MySQL Schema for tests.
        run: |
          mysql -u root -proot -e "create database pt_test"
          mysql -u root -proot -e "show databases"
        # 1) Setup environment for actions
      - uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: |
          composer update -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --ignore-platform-reqs
          composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --ignore-platform-reqs
      - uses: chrislennon/action-aws-cli@v1.1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        # All commands after this point have access to the AWS CLI

      - name: Generate .env.testing
        run: |
          pwd
          aws secretsmanager get-secret-value --secret-id ${{ env.TESTING_APPLICATION_SECRET_ID }} --region ${{ env.REGION }} |
          php -r '$data = json_decode(stream_get_contents(STDIN));echo $data->SecretString;' > .env.testing
          pwd
      - name: Generate .env
        run: |
          cp .env.testing .env
      - name: Generate Laravel key
        run: |
          php artisan key:generate
      - name: Directory Permissions
        run: |
          chmod -R 777 storage bootstrap/cache
      - name: Populate MySQL for tests.
        run: |
          php artisan migrate:install
          php artisan migrate
          php artisan migrate:status
      #          php artisan db:seed --env=testing
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: |
          php artisan config:cache --env=testing
          php vendor/phpunit/phpunit/phpunit tests/Feature/ --verbose
      # - name: Show Laravel logs
      #   run: |
      #       cat storage/logs/laravel.log
